{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { clerkMiddleware, createRouteMatcher } from \"@clerk/nextjs/server\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Create route matchers for student and teacher routes\r\n//If a page starts with /user/... → it's a student page, If a page starts with /teacher/... → it's a teacher page\r\nconst isStudentRoute = createRouteMatcher([\"/user/(.*)\"]);\r\nconst isTeacherRoute = createRouteMatcher([\"/teacher/(.*)\"]);\r\n\r\n// Middleware to check user role and redirect accordingly\r\nexport default clerkMiddleware(async (auth, req) =>{\r\n    //gets the logged-in user's data (like role or ID).\r\n    const {sessionClaims} = await auth();\r\n    //try to see if the user is a student or teacher, if can't find it, default to student.\r\n    const userRole = \r\n    (sessionClaims?.metadata as {userType: \"student\" | \"teacher\"})\r\n    ?.userType || \"student\";\r\n\r\n    //req contains the request object like URL\r\n    if(isStudentRoute(req)){\r\n        if(userRole !== \"student\"){\r\n            const url = new URL(\"/teacher/courses\", req.url);\r\n            return NextResponse.redirect(url);\r\n    }\r\n}\r\n\r\n    if(isTeacherRoute(req)){\r\n        if(userRole !== \"teacher\"){\r\n            const url = new URL(\"/user/courses\", req.url);\r\n            return NextResponse.redirect(url);\r\n        }\r\n    }\r\n});\r\n\r\n// This config is used to specify which routes the middleware should run on\r\nexport const config ={\r\n    matcher: [\r\n         // Skip Next.js internals and all static files, unless found in search params\r\n    '/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)',\r\n    // Always run for API routes\r\n    '/(api|trpc)(.*)',\r\n    ],\r\n    };"],"names":[],"mappings":";;;;AACA;AADA;AAAA;AACA;;;AAEA,uDAAuD;AACvD,iHAAiH;AACjH,MAAM,iBAAiB,CAAA,GAAA,0KAAA,CAAA,qBAAkB,AAAD,EAAE;IAAC;CAAa;AACxD,MAAM,iBAAiB,CAAA,GAAA,0KAAA,CAAA,qBAAkB,AAAD,EAAE;IAAC;CAAgB;uCAG5C,CAAA,GAAA,6KAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,MAAM;IACxC,mDAAmD;IACnD,MAAM,EAAC,aAAa,EAAC,GAAG,MAAM;IAC9B,uFAAuF;IACvF,MAAM,WACN,AAAC,eAAe,UACd,YAAY;IAEd,0CAA0C;IAC1C,IAAG,eAAe,MAAK;QACnB,IAAG,aAAa,WAAU;YACtB,MAAM,MAAM,IAAI,IAAI,oBAAoB,IAAI,GAAG;YAC/C,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QACrC;IACJ;IAEI,IAAG,eAAe,MAAK;QACnB,IAAG,aAAa,WAAU;YACtB,MAAM,MAAM,IAAI,IAAI,iBAAiB,IAAI,GAAG;YAC5C,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QACjC;IACJ;AACJ;AAGO,MAAM,SAAQ;IACjB,SAAS;QACJ,6EAA6E;QAClF;QACA,4BAA4B;QAC5B;KACC;AACD"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}