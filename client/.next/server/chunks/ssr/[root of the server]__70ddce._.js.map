{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Administrator/OneDrive/Desktop/skillHub/client/src/components/Loading.tsx"],"sourcesContent":["import { Loader2 } from 'lucide-react'\r\nimport React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">Loading\r\n    <Loader2 className=\"loading__spinner\" />\r\n    <span className= \"loading__text\">Please wait...</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading"],"names":[],"mappings":";;;;AAAA;;;AAGA,MAAM,UAAU;IACd,qBACE,8OAAC;QAAI,WAAU;;YAAU;0BACzB,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;0BACnB,8OAAC;gBAAK,WAAW;0BAAgB;;;;;;;;;;;;AAGrC;uCAEe"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Administrator/OneDrive/Desktop/skillHub/client/src/state/api.ts"],"sourcesContent":["//createApi: Helps you define API endpoints.\r\n//fetchBaseQuery: A basic wrapper around fetch() to talk to a REST API.\r\n//they are designed to simplify data fetching and caching\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport {BaseQueryApi, FetchArgs} from \"@reduxjs/toolkit/query\";\r\n\r\n// This is a custom base query function for RTK Query.\r\n// It wraps around fetchBaseQuery and helps extract only the `data` part from the API response.\r\n\r\nconst customBaseQuery = async (\r\n  args: string | FetchArgs,      // API request info (like URL, params, method)\r\n  api: BaseQueryApi,             // RTK Query's internal tools (like dispatch, getState)\r\n  extraOptions: {}               // Any extra options (not commonly used)\r\n) => {\r\n\r\n  // Create a default fetch function using the base URL from your .env config\r\n  const baseQuery = fetchBaseQuery({\r\n    baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL, // e.g., \"http://localhost:8001\"\r\n  });\r\n\r\n  try {\r\n    // Make the actual API request using the baseQuery\r\n    const result: any = await baseQuery(args, api, extraOptions);\r\n\r\n    // If the response has a `data` field, extract the inner `data` field (e.g., response.data.data)\r\n    // This simplifies your component code â€” you get only the actual payload.\r\n    if (result.data) {\r\n      result.data = result.data.data;\r\n    }\r\n\r\n    // Return the cleaned-up result\r\n    return result;\r\n\r\n  } catch (error: unknown) {\r\n    // If an error happens (e.g., network failure), format it in a standard way\r\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\r\n\r\n    // Return the error in a shape that RTK Query can understand\r\n    return {\r\n      error: {\r\n        status: \"FETCH_ERROR\",\r\n        error: errorMessage,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\n\r\n//it just sends the GET request with the URL (and optional query param), gets back an array of courses, and tags it as \"Courses\".\r\n//\r\nexport const api = createApi({\r\n  baseQuery: customBaseQuery,\r\n  reducerPath: \"api\",\r\n  tagTypes: [\"Courses\"],\r\n  endpoints: (build) => ({\r\n    getCourses: build.query<Course[], {category?: string}>({\r\n      query: ({ category }) => ({\r\n        url: \"courses\",\r\n        params: {category},\r\n      }),\r\n      providesTags: [\"Courses\"],\r\n    }),\r\n    getCourse: build.query<Course, string>({\r\n      query: (id) => `courses/${id}`,\r\n      providesTags: (result, error, id) =>[{type: \"Courses\", id}],\r\n    })\r\n  }),\r\n});\r\n\r\nexport const { useGetCoursesQuery, useGetCourseQuery} = api;\r\n"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,uEAAuE;AACvE,yDAAyD;;;;;;AACzD;AAAA;;AAGA,sDAAsD;AACtD,+FAA+F;AAE/F,MAAM,kBAAkB,OACtB,MACA,KACA,aAA+B,wCAAwC;;IAGvE,2EAA2E;IAC3E,MAAM,YAAY,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QAC/B,OAAO;IACT;IAEA,IAAI;QACF,kDAAkD;QAClD,MAAM,SAAc,MAAM,UAAU,MAAM,KAAK;QAE/C,gGAAgG;QAChG,yEAAyE;QACzE,IAAI,OAAO,IAAI,EAAE;YACf,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC,IAAI;QAChC;QAEA,+BAA+B;QAC/B,OAAO;IAET,EAAE,OAAO,OAAgB;QACvB,2EAA2E;QAC3E,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAE9D,4DAA4D;QAC5D,OAAO;YACL,OAAO;gBACL,QAAQ;gBACR,OAAO;YACT;QACF;IACF;AACF;AAKO,MAAM,MAAM,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,WAAW;IACX,aAAa;IACb,UAAU;QAAC;KAAU;IACrB,WAAW,CAAC,QAAU,CAAC;YACrB,YAAY,MAAM,KAAK,CAAgC;gBACrD,OAAO,CAAC,EAAE,QAAQ,EAAE,GAAK,CAAC;wBACxB,KAAK;wBACL,QAAQ;4BAAC;wBAAQ;oBACnB,CAAC;gBACD,cAAc;oBAAC;iBAAU;YAC3B;YACA,WAAW,MAAM,KAAK,CAAiB;gBACrC,OAAO,CAAC,KAAO,CAAC,QAAQ,EAAE,IAAI;gBAC9B,cAAc,CAAC,QAAQ,OAAO,KAAM;wBAAC;4BAAC,MAAM;4BAAW;wBAAE;qBAAE;YAC7D;QACF,CAAC;AACH;AAEO,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAC,GAAG"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Administrator/OneDrive/Desktop/skillHub/client/src/app/%28nondashboard%29/search/page.tsx"],"sourcesContent":["import Loading from '@/components/Loading';\r\nimport { useGetCoursesQuery } from '@/state/api';\r\nimport { useRouter } from 'next/router';\r\nimport React, { use, useEffect, useState } from 'react'\r\nimport { set } from 'zod';\r\n\r\nconst Search = () => {\r\n    // This is the search page where we will handle the search functionality\r\n  // We will use the URLSearchParams to get the search query from the URL\r\nconst searchParams = new URLSearchParams();\r\nconst id = searchParams.get('id');\r\nconst {data: courses, isLoading, isError} = useGetCoursesQuery({});\r\nconst [selectedCourse, setSelectedCourse] = useState<Course | null>(null);\r\nconst router = useRouter();\r\n\r\nuseEffect(() => {\r\n  if (courses) {\r\n    if (id) {\r\n      const course = courses.find((c) => c.courseId === id);\r\n            setSelectedCourse(course || courses[0]); // Set the selected course or fallback to the first course\r\n        } else {\r\n            setSelectedCourse(courses[0]); // Fallback to the first course if no match\r\n        }   \r\n    }\r\n}, [courses, id]);    \r\n\r\nif (isLoading) return <Loading />\r\n\r\n  return (\r\n    <div>Search</div>\r\n  )\r\n}\r\n\r\nexport default Search"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAGA,MAAM,SAAS;IACX,wEAAwE;IAC1E,uEAAuE;IACzE,MAAM,eAAe,IAAI;IACzB,MAAM,KAAK,aAAa,GAAG,CAAC;IAC5B,MAAM,EAAC,MAAM,OAAO,EAAE,SAAS,EAAE,OAAO,EAAC,GAAG,CAAA,GAAA,mHAAA,CAAA,qBAAkB,AAAD,EAAE,CAAC;IAChE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS;YACX,IAAI,IAAI;gBACN,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,QAAQ,KAAK;gBAC5C,kBAAkB,UAAU,OAAO,CAAC,EAAE,GAAG,0DAA0D;YACvG,OAAO;gBACH,kBAAkB,OAAO,CAAC,EAAE,GAAG,2CAA2C;YAC9E;QACJ;IACJ,GAAG;QAAC;QAAS;KAAG;IAEhB,IAAI,WAAW,qBAAO,8OAAC,6HAAA,CAAA,UAAO;;;;;IAE5B,qBACE,8OAAC;kBAAI;;;;;;AAET;uCAEe"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}