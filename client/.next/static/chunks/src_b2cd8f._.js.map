{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Administrator/OneDrive/Desktop/skillHub/client/src/state/index.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface InitialStateTypes {\r\n  courseEditor: {\r\n    sections: Section[];\r\n    isChapterModalOpen: boolean;\r\n    isSectionModalOpen: boolean;\r\n    selectedSectionIndex: number | null;\r\n    selectedChapterIndex: number | null;\r\n  };\r\n}\r\n\r\nconst initialState: InitialStateTypes = {\r\n  courseEditor: {\r\n    sections: [],\r\n    isChapterModalOpen: false,\r\n    isSectionModalOpen: false,\r\n    selectedSectionIndex: null,\r\n    selectedChapterIndex: null,\r\n  },\r\n};\r\n\r\nexport const globalSlice = createSlice({\r\n  name: \"global\",\r\n  initialState,\r\n  reducers: {\r\n    setSections: (state, action: PayloadAction<Section[]>) => {\r\n      state.courseEditor.sections = action.payload;\r\n    },\r\n    openChapterModal: (\r\n      state,\r\n      action: PayloadAction<{\r\n        sectionIndex: number | null;\r\n        chapterIndex: number | null;\r\n      }>\r\n    ) => {\r\n      state.courseEditor.isChapterModalOpen = true;\r\n      state.courseEditor.selectedSectionIndex = action.payload.sectionIndex;\r\n      state.courseEditor.selectedChapterIndex = action.payload.chapterIndex;\r\n    },\r\n    closeChapterModal: (state) => {\r\n      state.courseEditor.isChapterModalOpen = false;\r\n      state.courseEditor.selectedSectionIndex = null;\r\n      state.courseEditor.selectedChapterIndex = null;\r\n    },\r\n\r\n    openSectionModal: (\r\n      state,\r\n      action: PayloadAction<{ sectionIndex: number | null }>\r\n    ) => {\r\n      state.courseEditor.isSectionModalOpen = true;\r\n      state.courseEditor.selectedSectionIndex = action.payload.sectionIndex;\r\n    },\r\n    closeSectionModal: (state) => {\r\n      state.courseEditor.isSectionModalOpen = false;\r\n      state.courseEditor.selectedSectionIndex = null;\r\n    },\r\n\r\n    addSection: (state, action: PayloadAction<Section>) => {\r\n      state.courseEditor.sections.push(action.payload);\r\n    },\r\n    editSection: (\r\n      state,\r\n      action: PayloadAction<{ index: number; section: Section }>\r\n    ) => {\r\n      state.courseEditor.sections[action.payload.index] =\r\n        action.payload.section;\r\n    },\r\n    deleteSection: (state, action: PayloadAction<number>) => {\r\n      state.courseEditor.sections.splice(action.payload, 1);\r\n    },\r\n\r\n    addChapter: (\r\n      state,\r\n      action: PayloadAction<{ sectionIndex: number; chapter: Chapter }>\r\n    ) => {\r\n      state.courseEditor.sections[action.payload.sectionIndex].chapters.push(\r\n        action.payload.chapter\r\n      );\r\n    },\r\n    editChapter: (\r\n      state,\r\n      action: PayloadAction<{\r\n        sectionIndex: number;\r\n        chapterIndex: number;\r\n        chapter: Chapter;\r\n      }>\r\n    ) => {\r\n      state.courseEditor.sections[action.payload.sectionIndex].chapters[\r\n        action.payload.chapterIndex\r\n      ] = action.payload.chapter;\r\n    },\r\n    deleteChapter: (\r\n      state,\r\n      action: PayloadAction<{ sectionIndex: number; chapterIndex: number }>\r\n    ) => {\r\n      state.courseEditor.sections[action.payload.sectionIndex].chapters.splice(\r\n        action.payload.chapterIndex,\r\n        1\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setSections,\r\n  openChapterModal,\r\n  closeChapterModal,\r\n  openSectionModal,\r\n  closeSectionModal,\r\n  addSection,\r\n  editSection,\r\n  deleteSection,\r\n  addChapter,\r\n  editChapter,\r\n  deleteChapter,\r\n} = globalSlice.actions;\r\n\r\nexport default globalSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;AAYA,MAAM,eAAkC;IACtC,cAAc;QACZ,UAAU,EAAE;QACZ,oBAAoB;QACpB,oBAAoB;QACpB,sBAAsB;QACtB,sBAAsB;IACxB;AACF;AAEO,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACrC,MAAM;IACN;IACA,UAAU;QACR,aAAa,CAAC,OAAO;YACnB,MAAM,YAAY,CAAC,QAAQ,GAAG,OAAO,OAAO;QAC9C;QACA,kBAAkB,CAChB,OACA;YAKA,MAAM,YAAY,CAAC,kBAAkB,GAAG;YACxC,MAAM,YAAY,CAAC,oBAAoB,GAAG,OAAO,OAAO,CAAC,YAAY;YACrE,MAAM,YAAY,CAAC,oBAAoB,GAAG,OAAO,OAAO,CAAC,YAAY;QACvE;QACA,mBAAmB,CAAC;YAClB,MAAM,YAAY,CAAC,kBAAkB,GAAG;YACxC,MAAM,YAAY,CAAC,oBAAoB,GAAG;YAC1C,MAAM,YAAY,CAAC,oBAAoB,GAAG;QAC5C;QAEA,kBAAkB,CAChB,OACA;YAEA,MAAM,YAAY,CAAC,kBAAkB,GAAG;YACxC,MAAM,YAAY,CAAC,oBAAoB,GAAG,OAAO,OAAO,CAAC,YAAY;QACvE;QACA,mBAAmB,CAAC;YAClB,MAAM,YAAY,CAAC,kBAAkB,GAAG;YACxC,MAAM,YAAY,CAAC,oBAAoB,GAAG;QAC5C;QAEA,YAAY,CAAC,OAAO;YAClB,MAAM,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,OAAO;QACjD;QACA,aAAa,CACX,OACA;YAEA,MAAM,YAAY,CAAC,QAAQ,CAAC,OAAO,OAAO,CAAC,KAAK,CAAC,GAC/C,OAAO,OAAO,CAAC,OAAO;QAC1B;QACA,eAAe,CAAC,OAAO;YACrB,MAAM,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,OAAO,EAAE;QACrD;QAEA,YAAY,CACV,OACA;YAEA,MAAM,YAAY,CAAC,QAAQ,CAAC,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CACpE,OAAO,OAAO,CAAC,OAAO;QAE1B;QACA,aAAa,CACX,OACA;YAMA,MAAM,YAAY,CAAC,QAAQ,CAAC,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,CAC/D,OAAO,OAAO,CAAC,YAAY,CAC5B,GAAG,OAAO,OAAO,CAAC,OAAO;QAC5B;QACA,eAAe,CACb,OACA;YAEA,MAAM,YAAY,CAAC,QAAQ,CAAC,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CACtE,OAAO,OAAO,CAAC,YAAY,EAC3B;QAEJ;IACF;AACF;AAEO,MAAM,EACX,WAAW,EACX,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,UAAU,EACV,WAAW,EACX,aAAa,EACb,UAAU,EACV,WAAW,EACX,aAAa,EACd,GAAG,YAAY,OAAO;uCAER,YAAY,OAAO"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Administrator/OneDrive/Desktop/skillHub/client/src/state/api.ts"],"sourcesContent":["//createApi: Helps you define API endpoints.\r\n//fetchBaseQuery: A basic wrapper around fetch() to talk to a REST API.\r\n//they are designed to simplify data fetching and caching\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport {BaseQueryApi, FetchArgs} from \"@reduxjs/toolkit/query\";\r\n\r\n// This is a custom base query function for RTK Query.\r\n// It wraps around fetchBaseQuery and helps extract only the `data` part from the API response.\r\n\r\nconst customBaseQuery = async (\r\n  args: string | FetchArgs,      // API request info (like URL, params, method)\r\n  api: BaseQueryApi,             // RTK Query's internal tools (like dispatch, getState)\r\n  extraOptions: {}               // Any extra options (not commonly used)\r\n) => {\r\n\r\n  // Create a default fetch function using the base URL from your .env config\r\n  const baseQuery = fetchBaseQuery({\r\n    baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL, // e.g., \"http://localhost:8001\"\r\n  });\r\n\r\n  try {\r\n    // Make the actual API request using the baseQuery\r\n    const result: any = await baseQuery(args, api, extraOptions);\r\n\r\n    // If the response has a `data` field, extract the inner `data` field (e.g., response.data.data)\r\n    // This simplifies your component code â€” you get only the actual payload.\r\n    if (result.data) {\r\n      result.data = result.data.data;\r\n    }\r\n\r\n    // Return the cleaned-up result\r\n    return result;\r\n\r\n  } catch (error: unknown) {\r\n    // If an error happens (e.g., network failure), format it in a standard way\r\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\r\n\r\n    // Return the error in a shape that RTK Query can understand\r\n    return {\r\n      error: {\r\n        status: \"FETCH_ERROR\",\r\n        error: errorMessage,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\n\r\n//it just sends the GET request with the URL (and optional query param), gets back an array of courses, and tags it as \"Courses\".\r\n//\r\nexport const api = createApi({\r\n  baseQuery: customBaseQuery,\r\n  reducerPath: \"api\",\r\n  tagTypes: [\"Courses\"],\r\n  endpoints: (build) => ({\r\n    getCourses: build.query<Course[], {category?: string}>({\r\n      query: ({ category }) => ({\r\n        url: \"courses\",\r\n        params: {category},\r\n      }),\r\n      providesTags: [\"Courses\"],\r\n    }),\r\n    getCourse: build.query<Course, string>({\r\n      query: (id) => `courses/${id}`,\r\n      providesTags: (result, error, id) =>[{type: \"Courses\", id}],\r\n    })\r\n  }),\r\n});\r\n\r\nexport const { useGetCoursesQuery, useGetCourseQuery} = api;\r\n"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,uEAAuE;AACvE,yDAAyD;;;;;;AACzD;AAca;AAdb;;AAGA,sDAAsD;AACtD,+FAA+F;AAE/F,MAAM,kBAAkB,OACtB,MACA,KACA,aAA+B,wCAAwC;;IAGvE,2EAA2E;IAC3E,MAAM,YAAY,CAAA,GAAA,mLAAA,CAAA,iBAAc,AAAD,EAAE;QAC/B,OAAO;IACT;IAEA,IAAI;QACF,kDAAkD;QAClD,MAAM,SAAc,MAAM,UAAU,MAAM,KAAK;QAE/C,gGAAgG;QAChG,yEAAyE;QACzE,IAAI,OAAO,IAAI,EAAE;YACf,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC,IAAI;QAChC;QAEA,+BAA+B;QAC/B,OAAO;IAET,EAAE,OAAO,OAAgB;QACvB,2EAA2E;QAC3E,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAE9D,4DAA4D;QAC5D,OAAO;YACL,OAAO;gBACL,QAAQ;gBACR,OAAO;YACT;QACF;IACF;AACF;AAKO,MAAM,MAAM,CAAA,GAAA,qNAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,WAAW;IACX,aAAa;IACb,UAAU;QAAC;KAAU;IACrB,WAAW,CAAC,QAAU,CAAC;YACrB,YAAY,MAAM,KAAK,CAAgC;gBACrD,OAAO,CAAC,EAAE,QAAQ,EAAE,GAAK,CAAC;wBACxB,KAAK;wBACL,QAAQ;4BAAC;wBAAQ;oBACnB,CAAC;gBACD,cAAc;oBAAC;iBAAU;YAC3B;YACA,WAAW,MAAM,KAAK,CAAiB;gBACrC,OAAO,CAAC,KAAO,CAAC,QAAQ,EAAE,IAAI;gBAC9B,cAAc,CAAC,QAAQ,OAAO,KAAM;wBAAC;4BAAC,MAAM;4BAAW;wBAAE;qBAAE;YAC7D;QACF,CAAC;AACH;AAEO,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAC,GAAG"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Administrator/OneDrive/Desktop/skillHub/client/src/state/redux.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRef } from \"react\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport globalReducer from \"@/state\";\r\nimport { api } from \"@/state/api\";\r\n\r\n/* REDUX STORE */\r\nconst rootReducer = combineReducers({\r\n  global: globalReducer,\r\n  [api.reducerPath]: api.reducer,\r\n});\r\n\r\nexport const makeStore = () => {\r\n  return configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [\r\n            \"api/executeMutation/pending\",\r\n            \"api/executeMutation/fulfilled\",\r\n            \"api/executeMutation/rejected\",\r\n          ],\r\n          ignoredActionPaths: [\r\n            \"meta.arg.originalArgs.file\",\r\n            \"meta.arg.originalArgs.formData\",\r\n            \"payload.chapter.video\",\r\n            \"meta.baseQueryMeta.request\",\r\n            \"meta.baseQueryMeta.response\",\r\n          ],\r\n          ignoredPaths: [\r\n            \"global.courseEditor.sections\",\r\n            \"entities.videos.data\",\r\n            \"meta.baseQueryMeta.request\",\r\n            \"meta.baseQueryMeta.response\",\r\n          ],\r\n        },\r\n      }).concat(api.middleware),\r\n  });\r\n};\r\n\r\n/* REDUX TYPES */\r\nexport type AppStore = ReturnType<typeof makeStore>;\r\nexport type RootState = ReturnType<AppStore[\"getState\"]>;\r\nexport type AppDispatch = AppStore[\"dispatch\"];\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n/* PROVIDER */\r\nexport default function StoreProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const storeRef = useRef<AppStore | null>(null);\r\n  if (!storeRef.current) {\r\n    storeRef.current = makeStore();\r\n    setupListeners(storeRef.current.dispatch);\r\n  }\r\n  return <Provider store={storeRef.current}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAEA;AAKA;AACA;AAJA;AAAA;AADA;AAGA;;;AANA;;;;;;;;AAUA,eAAe,GACf,MAAM,cAAc,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,QAAQ,wHAAA,CAAA,UAAa;IACrB,CAAC,sHAAA,CAAA,MAAG,CAAC,WAAW,CAAC,EAAE,sHAAA,CAAA,MAAG,CAAC,OAAO;AAChC;AAEO,MAAM,YAAY;IACvB,OAAO,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;QACpB,SAAS;QACT,YAAY,CAAC,uBACX,qBAAqB;gBACnB,mBAAmB;oBACjB,gBAAgB;wBACd;wBACA;wBACA;qBACD;oBACD,oBAAoB;wBAClB;wBACA;wBACA;wBACA;wBACA;qBACD;oBACD,cAAc;wBACZ;wBACA;wBACA;wBACA;qBACD;gBACH;YACF,GAAG,MAAM,CAAC,sHAAA,CAAA,MAAG,CAAC,UAAU;IAC5B;AACF;AAMO,MAAM,iBAAiB;;IAAM,OAAA,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;AAAe;GAAhD;;QAAuB,4JAAA,CAAA,cAAW;;;AACxC,MAAM,iBAAkD,4JAAA,CAAA,cAAW;AAG3D,SAAS,cAAc,EACpC,QAAQ,EAGT;;IACC,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAmB;IACzC,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,SAAS,OAAO,GAAG;QACnB,CAAA,GAAA,mLAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,CAAC,QAAQ;IAC1C;IACA,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C;IAXwB;KAAA"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Administrator/OneDrive/Desktop/skillHub/client/src/app/providers.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\";\r\nimport StoreProvider from \"@/state/redux\";\r\n\r\nconst Providers = ({ children }: { children: React.ReactNode}) => {\r\n  return <StoreProvider>{children}</StoreProvider>;\r\n};\r\n\r\nexport default Providers;"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKA,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAgC;IAC3D,qBAAO,6LAAC,yHAAA,CAAA,UAAa;kBAAE;;;;;;AACzB;KAFM;uCAIS"}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}